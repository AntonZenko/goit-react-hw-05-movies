{"version":3,"file":"static/js/266.55aecf62.chunk.js","mappings":"sLAEaA,E,QAAUC,GAAAA,IAAH,+C,SCAPC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OAAO,SAACH,EAAD,UAAUG,GAClB,C,uGCDYC,EAAOH,EAAAA,GAAAA,GAAH,6CAIJI,EAAOJ,EAAAA,GAAAA,GAAH,yCAIJK,GAAWL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,kJ,SCPd,SAASO,EAAT,GAAiC,IAAbC,EAAY,EAAZA,SACnBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACP,EAAD,UACGK,GACCA,EAASG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACX,SAACV,EAAD,WACE,SAACC,EAAD,CACEU,GAAE,kBAAaH,GACfI,MACEP,EAASQ,OACLR,EAASS,SAAWT,EAASQ,OAC7BR,EAASS,SALjB,gBAQGL,QARH,IAQGA,EAAAA,EAASC,KATHF,EADA,KAgBpB,C,iKCxBYO,E,QAAQnB,GAAAA,GAAH,mH,SCIlB,EAJkB,SAAC,GAAkB,IAAhBE,EAAe,EAAfA,SACnB,OAAO,SAACiB,EAAD,UAAQjB,GAChB,ECuBD,EArBiB,WACf,OAAkCkB,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAYA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEIC,EAAAA,EAAAA,MAFJ,OAERC,EAFQ,OAGdJ,GAAa,SAAAK,GAAS,OAAID,CAAJ,IAHR,gDAKdE,QAAQC,IAAR,MALc,yDAAH,qDAQfL,GACD,GAAE,CAACF,KAEF,UAACrB,EAAA,EAAD,YACE,SAAC,EAAD,8BACA,SAAC,IAAD,CAAUO,SAAUa,MAGzB,C,4MCvBKS,EAAU,+BACVC,EAAU,mCAET,SAAeN,IAAtB,4CAAO,OAAP,oBAAO,oGACkBO,IAAAA,IAAA,UAClBF,EADkB,uCACoBC,IAFtC,cACCE,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BxB,GAA9B,uFACkBoB,IAAAA,IAAA,UAAaF,EAAb,kBAA8BlB,EAA9B,oBAA4CmB,IAD9D,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BzB,GAA5B,uFACkBoB,IAAAA,IAAA,UAClBF,EADkB,kBACDlB,EADC,4BACqBmB,IAFvC,cACCE,EADD,yBAIEA,EAASC,KAAKI,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBR,IAAAA,IAAA,UAClBF,EADkB,iCACcC,EADd,yBACsCS,IAFxD,cACCP,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+B7B,GAA/B,uFACkBoB,IAAAA,IAAA,UAClBF,EADkB,kBACDlB,EADC,4BACqBmB,EADrB,YADlB,cACCE,EADD,yBAKEA,EAASC,KAAKC,SALhB,kE","sources":["components/Container/Container.styled.jsx","components/Container/Container.jsx","components/Pages/FilmList/FilmList.styled.jsx","components/Pages/FilmList/Filmlist.jsx","components/PageTitle/PageTitle.styled.jsx","components/PageTitle/PageTitle.jsx","components/Pages/HomePage/HomePage.jsx","components/services/fetchService.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 20px 40px;\n`;\n","import { Wrapper } from './Container.styled';\n\nexport const Container = ({ children }) => {\n  return <Wrapper>{children}</Wrapper>;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  padding: 5px;\n`;\n\nexport const LinkItem = styled(Link)`\n  text-decoration: none;\n  color: #000;\n  font-size: 18px;\n  font-weight: 500;\n  &:hover {\n    color: #ff0000;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item, LinkItem } from './FilmList.styled';\n\nexport function FilmList({ filmList }) {\n  const location = useLocation();\n\n  return (\n    <List>\n      {filmList &&\n        filmList.map(({ id, title, name }) => (\n          <Item key={id}>\n            <LinkItem\n              to={`/movies/${id}`}\n              state={\n                location.search\n                  ? location.pathname + location.search\n                  : location.pathname\n              }\n            >\n              {title ?? name}\n            </LinkItem>\n          </Item>\n        ))}\n    </List>\n  );\n}\n\nFilmList.propTypes = {\n  filmList: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: #303030;\n  margin: 0;\n  padding: 0;\n`;\n","import { Title } from './PageTitle.styled';\n\nconst PageTitle = ({ children }) => {\n  return <Title>{children}</Title>;\n};\n\nexport default PageTitle;\n","import { useState, useEffect } from 'react';\nimport { FilmList } from '../FilmList/Filmlist';\nimport { getTrending } from '../../services/fetchService';\nimport { Container } from '../../Container/Container';\nimport PageTitle from '../../PageTitle/PageTitle';\n\nconst HomePage = () => {\n  const [trendings, setTrendings] = useState([]);\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        const res = await getTrending();\n        setTrendings(prevProps => res);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovies();\n  }, [setTrendings]);\n  return (\n    <Container>\n      <PageTitle>Tranding today</PageTitle>\n      <FilmList filmList={trendings} />\n    </Container>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ffda232ba1095b2db867c38e7745d8d7';\n\nexport async function getTrending() {\n  const response = await axios.get(\n    `${API_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n\nexport async function getMovieDetail(id) {\n  const response = await axios.get(`${API_URL}/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function getMovieCast(id) {\n  const response = await axios.get(\n    `${API_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n}\n\nexport async function searchMovie(query) {\n  const response = await axios.get(\n    `${API_URL}/search/movie?api_key=${API_KEY}&page=1&query=${query}`\n  );\n\n  return response.data.results;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios.get(\n    `${API_URL}/movie/${id}/reviews?api_key=${API_KEY}&page=1`\n  );\n\n  return response.data.results;\n}\n"],"names":["Wrapper","styled","Container","children","List","Item","LinkItem","Link","FilmList","filmList","location","useLocation","map","id","title","name","to","state","search","pathname","Title","useState","trendings","setTrendings","useEffect","getMovies","getTrending","res","prevProps","console","log","API_URL","API_KEY","axios","response","data","results","getMovieDetail","getMovieCast","cast","searchMovie","query","getMovieReviews"],"sourceRoot":""}