{"version":3,"file":"static/js/89.4244df8b.chunk.js","mappings":"wRAEaA,EAAUC,EAAAA,GAAAA,IAAH,gEAKPC,EAAYD,EAAAA,GAAAA,GAAH,8FAOTE,EAAWF,EAAAA,GAAAA,EAAH,4CAIRG,EAAWH,EAAAA,GAAAA,GAAH,uHAORI,EAAWJ,EAAAA,GAAAA,GAAH,iG,SCyBrB,MAvCA,WACE,IAAQK,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,8GAEKC,EAAAA,EAAAA,IAAaP,GAFlB,OAEPQ,EAFO,OAGbJ,GAAQ,SAAAK,GAAS,OAAID,CAAJ,IAHJ,gDAKbE,QAAQC,IAAR,MALa,yDAAH,qDAQdL,GACD,GAAE,CAACN,KAGF,SAACF,EAAD,UACGK,GACCA,EAAKS,KAAI,SAAAC,GAAK,OACZ,UAACd,EAAD,YACE,SAACL,EAAD,CACEoB,IACED,EAAME,aAAN,yCACsCF,EAAME,cACxC,4BAENC,IAAI,cACJC,cAAc,YACdC,MAAM,WAER,SAACtB,EAAD,UAAYiB,EAAMM,QAClB,UAACtB,EAAD,yBAAsBgB,EAAMO,eAZfP,EAAMQ,UADT,KAkBrB,C,4MC9CKC,EAAU,+BACVC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAA,UAClBH,EADkB,uCACoBC,IAFtC,cACCG,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8B7B,GAA9B,uFACkByB,IAAAA,IAAA,UAAaH,EAAb,kBAA8BtB,EAA9B,oBAA4CuB,IAD9D,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAepB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BP,GAA5B,uFACkByB,IAAAA,IAAA,UAClBH,EADkB,kBACDtB,EADC,4BACqBuB,IAFvC,cACCG,EADD,yBAIEA,EAASC,KAAKxB,MAJhB,kEAOA,SAAe2B,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBN,IAAAA,IAAA,UAClBH,EADkB,iCACcC,EADd,yBACsCQ,IAFxD,cACCL,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BhC,GAA/B,uFACkByB,IAAAA,IAAA,UAClBH,EADkB,kBACDtB,EADC,4BACqBuB,EADrB,YADlB,cACCG,EADD,yBAKEA,EAASC,KAAKC,SALhB,kE","sources":["components/Pages/Cast/Cast.styled.jsx","components/Pages/Cast/Cast.jsx","components/services/fetchService.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastImg = styled.img`\n  height: 300px;\n  object-fit: cover;\n`;\n\nexport const CastTitle = styled.h3`\n  margin: 0;\n  padding: 0;\n  font-size: 22px;\n  font-weight: 500;\n`;\n\nexport const CastText = styled.p`\n  font-size: 18px;\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 20px 0px;\n  margin: 0;\n  list-style: none;\n`;\nexport const CastItem = styled.li`\n  width: 200px;\n\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from '../../services/fetchService';\nimport {\n  CastList,\n  CastItem,\n  CastImg,\n  CastTitle,\n  CastText,\n} from './Cast.styled';\n\nfunction Cast() {\n  const { id } = useParams();\n  const [cast, setCast] = useState('');\n\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        const res = await getMovieCast(id);\n        setCast(prevProps => res);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovie();\n  }, [id]);\n\n  return (\n    <CastList>\n      {cast &&\n        cast.map(actor => (\n          <CastItem key={actor.credit_id}>\n            <CastImg\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n                  : 'https://i.pravatar.cc/300'\n              }\n              alt=\"actor_photo\"\n              intrinsicsize=\"100 x 160\"\n              width=\"200px\"\n            />\n            <CastTitle>{actor.name}</CastTitle>\n            <CastText>Character: {actor.character}</CastText>\n          </CastItem>\n        ))}\n    </CastList>\n  );\n}\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ffda232ba1095b2db867c38e7745d8d7';\n\nexport async function getTrending() {\n  const response = await axios.get(\n    `${API_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n\nexport async function getMovieDetail(id) {\n  const response = await axios.get(`${API_URL}/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function getMovieCast(id) {\n  const response = await axios.get(\n    `${API_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n}\n\nexport async function searchMovie(query) {\n  const response = await axios.get(\n    `${API_URL}/search/movie?api_key=${API_KEY}&page=1&query=${query}`\n  );\n\n  return response.data.results;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios.get(\n    `${API_URL}/movie/${id}/reviews?api_key=${API_KEY}&page=1`\n  );\n\n  return response.data.results;\n}\n"],"names":["CastImg","styled","CastTitle","CastText","CastList","CastItem","id","useParams","useState","cast","setCast","useEffect","getMovie","getMovieCast","res","prevProps","console","log","map","actor","src","profile_path","alt","intrinsicsize","width","name","character","credit_id","API_URL","API_KEY","getTrending","axios","response","data","results","getMovieDetail","searchMovie","query","getMovieReviews"],"sourceRoot":""}