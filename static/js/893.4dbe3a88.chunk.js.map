{"version":3,"file":"static/js/893.4dbe3a88.chunk.js","mappings":"kRAEaA,EAAWC,EAAAA,GAAAA,EAAH,wFAMRC,EAAaD,EAAAA,GAAAA,GAAH,8H,SC+BvB,MAnCA,WACE,IAAQE,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,8GAEKC,EAAAA,EAAAA,IAAgBP,GAFrB,OAEPQ,EAFO,OAIbJ,GAAU,SAAAK,GAAS,OAAID,CAAJ,IAJN,gDAMbE,QAAQC,IAAR,MANa,yDAAH,qDASdL,GACD,GAAE,CAACN,KAGF,8BACqB,IAAlBG,EAAOS,QACN,SAACf,EAAD,uDAEA,SAACE,EAAD,UACGI,EAAOU,KAAI,SAAAV,GAAM,OAChB,2BACE,qCAAaA,EAAOW,WACpB,uBAAIX,EAAOY,YAFJZ,EAAOH,GADA,OAU3B,C,4MCnCKgB,EAAU,+BACVC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAA,UAClBH,EADkB,uCACoBC,IAFtC,cACCG,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BvB,GAA9B,uFACkBmB,IAAAA,IAAA,UAAaH,EAAb,kBAA8BhB,EAA9B,oBAA4CiB,IAD9D,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BxB,GAA5B,uFACkBmB,IAAAA,IAAA,UAClBH,EADkB,kBACDhB,EADC,4BACqBiB,IAFvC,cACCG,EADD,yBAIEA,EAASC,KAAKI,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBR,IAAAA,IAAA,UAClBH,EADkB,iCACcC,EADd,yBACsCU,IAFxD,cACCP,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAef,EAAtB,+CAAO,OAAP,oBAAO,WAA+BP,GAA/B,uFACkBmB,IAAAA,IAAA,UAClBH,EADkB,kBACDhB,EADC,4BACqBiB,EADrB,YADlB,cACCG,EADD,yBAKEA,EAASC,KAAKC,SALhB,kE","sources":["components/Pages/Rewies/Rewies.styled.jsx","components/Pages/Rewies/Rewies.jsx","components/services/fetchService.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const NoReview = styled.p`\n  font-size: 22px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport const ReviewList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 20px 0px;\n  margin: 0;\n  list-style: none;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../../services/fetchService';\nimport { NoReview, ReviewList } from './Rewies.styled.jsx';\nfunction Review() {\n  const { id } = useParams();\n  const [review, setReview] = useState('');\n\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        const res = await getMovieReviews(id);\n        // console.log(res);\n        setReview(prevProps => res);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovie();\n  }, [id]);\n\n  return (\n    <>\n      {review.length === 0 ? (\n        <NoReview>We dont have any reviews for this movie</NoReview>\n      ) : (\n        <ReviewList>\n          {review.map(review => (\n            <li key={review.id}>\n              <h3>Author: {review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ReviewList>\n      )}\n    </>\n  );\n}\n\nexport default Review;\n","import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ffda232ba1095b2db867c38e7745d8d7';\n\nexport async function getTrending() {\n  const response = await axios.get(\n    `${API_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n\nexport async function getMovieDetail(id) {\n  const response = await axios.get(`${API_URL}/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function getMovieCast(id) {\n  const response = await axios.get(\n    `${API_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n}\n\nexport async function searchMovie(query) {\n  const response = await axios.get(\n    `${API_URL}/search/movie?api_key=${API_KEY}&page=1&query=${query}`\n  );\n\n  return response.data.results;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios.get(\n    `${API_URL}/movie/${id}/reviews?api_key=${API_KEY}&page=1`\n  );\n\n  return response.data.results;\n}\n"],"names":["NoReview","styled","ReviewList","id","useParams","useState","review","setReview","useEffect","getMovie","getMovieReviews","res","prevProps","console","log","length","map","author","content","API_URL","API_KEY","getTrending","axios","response","data","results","getMovieDetail","getMovieCast","cast","searchMovie","query"],"sourceRoot":""}